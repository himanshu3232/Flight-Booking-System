server:
  port: 3000

spring:
  application:
    name: booking-service

  mail:
    host : smtp.gmail.com
    port : 587
    username : ${GMAIL_ID}
    password : ${GMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  profiles:
    active: prod
  cloud:
    function:
      definition: updateSeats; checkIn
    stream:
      bindings:
        updateSeats-out-0:
          destination: update-seats-communication
          group: ${spring.application.name}
        checkIn-in-0:
          destination: check-in-communication
          group: ${spring.application.name}


  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10s

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_URL}/booking_service
    username: ${MYSQL_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

logging:
  level:
    org.hibernate.SQL: DEBUG

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/


info:
  app:
    name: booking_service
    description: "Flight Booking Service"
    version: 1.0.0
